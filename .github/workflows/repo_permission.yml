name: repo_permission

on:
  issues:
    types: [opened, edited]
  workflow_dispatch:
    inputs:
      variables:
        type: string

jobs:
  BugWorkflow:
    runs-on: ubuntu-latest
    
    if: github.event_name == 'issues' &&
      (github.event.action == 'opened' || github.event.action == 'edited') && 
      contains(github.event.issue.title, '[Repo Permission]')
    steps:
      - name: Check out
        uses: actions/checkout@v3 
        
      - name: Parse Issue JSON
        id: parse_issue_json
        shell: pwsh        
        run: |
          # Parse Issue Body
          
          "${{ github.event.issue.body }}"
          import-module Microsoft.PowerShell.Utility
          $issuebody = ConvertFrom-Markdown -InputObject "${{ github.event.issue.body }}"
          $xmlbody = ([xml]"<xml>$($issuebody.Html)</xml>").xml
          foreach ($heading in $xmlbody.h3) {
            $variablename = $heading.id
            switch ($heading.NextSibling.Name) {
              "p" {
                $variablevalue = $heading.NextSibling.InnerText
              }         
              "ul" {
                $variablevalue = ($heading.NextSibling.li | where {$_.childnodes.checked -eq 'checked'} | foreach-object {$_.'#text'.trim()}) -join ','
              }
            }
            write-host "$($variablename) = $($variablevalue)"
            Write-Output "$($variablename)=$($variablevalue)" >> $Env:GITHUB_OUTPUT
          }
      - name: Repo Permission
        id: assign_team
        shell: bash
        run: |
           curl -L \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.PAT_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/orgs/orgnization-name/teams/team-name/repos/orgnization-name/repository-name \
            -d '{"permission":"permisssion"}'
          
      # - name: Feedback Issue
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       var commentBody = "ðŸ‘‹ @${{ github.event.issue.user.login }} Thank for rasing this up. we will look into this ASAP."
      #       github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: commentBody
      #       })
            
      - name: Close issue
        id: close_issue
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}
        shell: pwsh        
        run: |
          # Close Issue
            cd $env:GITHUB_WORKSPACE
            gh issue close --comment "@${{ github.event.issue.user.login }} This issue has been resloved." "${{ github.event.issue.number }}"
